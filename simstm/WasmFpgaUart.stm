CALL $MAIN
FINISH

DEFINE_VAR WB_ADDRESS #x0
DEFINE_VAR WB_VALUE #x0
DEFINE_VAR WB_EXPECTED_VALUE #x0

MAIN:
BEGIN_SUB
    MESSAGE 0 "TESTBENCH: WASM_FPGA_UART"

    -- CALL $Rst_UARTBLK_Test
    -- CALL $RdBk_UARTBLK_Test
    CALL $TEST_UART_TX
    CALL $TEST_UART_RX

    RETURN_CALL
END_SUB

TEST_UART_RX:
BEGIN_SUB
    MESSAGE 0 "TEST_UART_RX"

    SET_SIG $SIG_UART_TX_RUN 1

    EQU_VAR WB_VALUE #x0

    LOOP 1000
        WAIT_NS 1000

        READ_FPGA 32 $UARTBLK_ADR_StatusReg WB_VALUE

        IF $WB_VALUE = $UARTBLK_VAL_RxDataIsPresent
            EQU_VAR WB_VALUE $UARTBLK_VAL_RxDoRun
            EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
            WRITE_FPGA 32 $UARTBLK_ADR_ControlReg $WB_VALUE
            VERIFY_FPGA 32 $UARTBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
            VERIFY_FPGA 32 $UARTBLK_ADR_RxDataReg WB_VALUE #x11 #xFFFFFFFF
            RETURN_CALL
        END_IF
    END_LOOP

    SET_SIG $SIG_UART_TX_RUN #x0
    ERRORPRINT "Unable to retrieve serial input."
    ABORT
    RETURN_CALL
END_SUB

TEST_UART_TX:
BEGIN_SUB
    MESSAGE 0 "TEST_UART_TX"

    WRITE_FPGA 32 $UARTBLK_ADR_TxDataReg #x11223344

    EQU_VAR WB_VALUE $UARTBLK_VAL_TxDoRun
    EQU_VAR WB_EXPECTED_VALUE $WB_VALUE
    WRITE_FPGA 32 $UARTBLK_ADR_ControlReg $WB_VALUE
    VERIFY_FPGA 32 $UARTBLK_ADR_ControlReg WB_VALUE $WB_EXPECTED_VALUE #xFFFFFFFF
    WRITE_FPGA 32 $UARTBLK_ADR_ControlReg #x0

    -- Wait until operation has been finished
    WAIT_NS 1000

    VERIFY_FPGA 32 $UARTBLK_ADR_StatusReg WB_VALUE #x0 #xFFFFFFFF

    RETURN_CALL
END_SUB

INCLUDE "Defines.stm"
INCLUDE "../hxs_gen/simstm_gen/indirect/wasm_fpga_uart_indirect.stm"
